{"version":3,"sources":["pages/home/Code.tsx","pages/home/CodeBlock.tsx","pages/home/index.tsx","pages/code/index.tsx","pages/blog/index.tsx","pages/resume/index.tsx","NavigationListener.tsx","Nav.tsx","Sidebar.tsx","Header.tsx","Layout.tsx","serviceWorker.js","index.js","App.tsx"],"names":["SpecialCharacters","_ref","children","Object","core_browser_esm","css","_templateObject","PropValue","_ref3","_templateObject3","PropName","_ref4","_templateObject4","Prop","_ref5","propName","propValue","_templateObject5","Code_PropName","Code_PropValue","Line","number","code","CodeBlock_templateObject","CodeBlock_templateObject2","linesOfCode","react","Code_SpecialCharacters","_ref2","_templateObject2","Code_Prop","CodeBlock","containerElement","useRef","_useState3","useState","_useState4","slicedToArray","numberOfLines","setNumberOfLines","windowHeight","_useState","window","innerHeight","_useState2","height","setHeight","useEffect","handleResize","addEventListener","removeEventListener","useWindowHeight","availableHeight","current","offsetTop","Math","floor","numberOfBlankLines","length","i","push","CodeBlock_templateObject3","ref","map","line","index","CodeBlock_Line","key","HomePage","path","home_templateObject","home_CodeBlock","pages_code","react_default","a","createElement","blog","resume","HandleNavigation","pathname","onChange","NavigationListener","es","location","NavigationListener_HandleNavigation","Row","indent","Nav_templateObject","NavLink","props","objectWithoutProperties","assign","Nav_templateObject2","getProps","isCurrent","style","backgroundColor","borderLeft","concat","Nav_Row","Nav","Nav_templateObject3","Nav_templateObject4","index_esm","Nav_templateObject5","Nav_NavLink","to","mql","matchMedia","SidebarContext","React","createContext","isDocked","toggleOpen","Sidebar","sidebarOpen","setSidebarOpen","matches","sidebarDocked","setSidebarDocked","handleMediaQueryChange","addListener","removeListener","onNavChange","useCallback","Provider","value","react_sidebar_esm","sidebar","open","docked","onSetOpen","defaultSidebarWidth","src_NavigationListener","Header","Consumer","Header_templateObject","Header_templateObject2","onClick","Layout","src_Sidebar","Boolean","hostname","match","ReactDOM","render","App_templateObject","src_Layout","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d3b72f61.chunk.js","sourcesContent":["import { FunctionComponent } from 'react';\n/** @jsx jsx */\nimport { css, jsx } from '@emotion/core';\n\nexport const SpecialCharacters: FunctionComponent = ({ children }) => {\n  return (\n    <span\n      css={css`\n        color: #abb2bf;\n      `}\n    >\n      {children}\n    </span>\n  );\n};\n\nexport const ClassDefinition: FunctionComponent = ({ children }) => {\n  return (\n    <span\n      css={css`\n        color: #e5c07b;\n      `}\n    >\n      {children}\n    </span>\n  );\n};\n\nconst PropValue: FunctionComponent = ({ children }) => {\n  return (\n    <span\n      css={css`\n        color: #98c379;\n      `}\n    >\n      {children}\n    </span>\n  );\n};\n\nconst PropName: FunctionComponent = ({ children }) => {\n  return (\n    <span\n      css={css`\n        color: #d19a66;\n      `}\n    >\n      {children}\n    </span>\n  );\n};\n\nexport const Prop: FunctionComponent<{\n  propName: string;\n  propValue: string;\n}> = ({ propName, propValue }) => {\n  return (\n    <span\n      css={css`\n        margin-left: 1.5rem;\n      `}\n    >\n      <PropName>\"{propName}\"</PropName>: <PropValue>\"{propValue}\"</PropValue>\n    </span>\n  );\n};\n","/** @jsx jsx */\nimport { css, jsx } from '@emotion/core';\nimport { Fragment, useState, useEffect, useRef } from 'react';\nimport { SpecialCharacters, ClassDefinition, Prop } from './Code';\n\nconst Line: React.FunctionComponent<{\n  number: number;\n  code: JSX.Element;\n}> = ({ number, code }) => {\n  return (\n    <li\n      css={css`\n        list-style: none;\n      `}\n    >\n      <span\n        css={css`\n          display: inline-block;\n          margin-right: 1rem;\n          text-align: right;\n          width: 40px;\n        `}\n      >\n        {number}\n      </span>\n      {code}\n    </li>\n  );\n};\n\nconst linesOfCode = [\n  <Fragment>\n    <SpecialCharacters>{'<'}</SpecialCharacters>\n    <ClassDefinition>SoftwareEngineer</ClassDefinition>\n  </Fragment>,\n  <Prop propName=\"name\" propValue=\"Michael Jewell\" />,\n  <Prop propName=\"location\" propValue=\"Santa Barbara, CA\" />,\n  <Prop propName=\"email\" propValue=\"michaeljewell9911@gmail.com\" />,\n  <Prop propName=\"phone\" propValue=\"(805) 284-1748\" />,\n  <SpecialCharacters>{'/>'}</SpecialCharacters>\n];\n\nfunction useWindowHeight() {\n  const [height, setHeight] = useState(window.innerHeight);\n\n  useEffect(() => {\n    const handleResize = () => setHeight(window.innerHeight);\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  });\n\n  return height;\n}\n\nconst CodeBlock: React.FunctionComponent<{}> = () => {\n  const containerElement = useRef(null) as any;\n  const [numberOfLines, setNumberOfLines] = useState(0);\n\n  const windowHeight = useWindowHeight();\n\n  useEffect(() => {\n    const availableHeight = windowHeight - containerElement.current.offsetTop;\n\n    setNumberOfLines(Math.floor(availableHeight / 18));\n  }, [containerElement, windowHeight]);\n\n  const code = [];\n  const numberOfBlankLines = Math.floor(\n    (numberOfLines - linesOfCode.length) / 2\n  );\n\n  for (let i = 0; i < numberOfBlankLines; i++) {\n    code.push(<div />);\n  }\n\n  for (let i = 0; i < linesOfCode.length; i++) {\n    code.push(linesOfCode[i]);\n  }\n\n  for (let i = 0; i < numberOfBlankLines; i++) {\n    code.push(<div />);\n  }\n\n  return (\n    <div css={css``} ref={containerElement}>\n      {containerElement.current\n        ? code.map((line, index) => (\n            <Line key={index} number={index + 1} code={line} />\n          ))\n        : null}\n    </div>\n  );\n};\n\nexport default CodeBlock;\n","/** @jsx jsx */\nimport { css, jsx } from '@emotion/core';\n\nimport CodeBlock from './CodeBlock';\n\nexport default function HomePage({ path }: { path: string }) {\n  return (\n    <div css={css``}>\n      <CodeBlock />\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default ({ path }: { path: string }) => <div>Coming soon</div>;\n","import React from 'react';\n\nexport default ({ path }: { path: string }) => <div>Coming soon</div>;\n","import React from 'react';\n\nexport default ({ path }: { path: string }) => <div>Coming soon</div>;\n","import React, { useEffect } from 'react';\nimport { Location } from '@reach/router';\n\nconst HandleNavigation: React.FunctionComponent<{\n  pathname: string;\n  onChange: () => void;\n}> = ({ pathname, onChange }) => {\n  useEffect(() => {\n    onChange();\n  }, [pathname, onChange]);\n\n  return null;\n};\n\nconst NavigationListener: React.FunctionComponent<{ onChange: () => void }> = ({\n  onChange\n}) => (\n  <Location>\n    {({ location }) => (\n      <HandleNavigation pathname={location.pathname} onChange={onChange} />\n    )}\n  </Location>\n);\n\nexport default NavigationListener;\n","/** @jsx jsx */\nimport { css, jsx } from '@emotion/core';\nimport { FaCaretDown, FaFolderOpen, FaRegFileCode } from 'react-icons/fa';\nimport { Link } from '@reach/router';\n\nconst Row: React.FunctionComponent<{ indent: number }> = ({\n  children,\n  indent\n}) => (\n  <div\n    css={css`\n      padding: 0.5rem 0 0.5rem ${indent}rem;\n    `}\n  >\n    {children}\n  </div>\n);\n\nconst borderSize = '3px';\nconst navBorderAccent = '#f58b00';\nconst navSelectedBackgroundColor = '#83e2fc33';\nconst navHoverBackgroundColor = '#37414050';\n\nconst NavLink: React.FunctionComponent<{ to: string; indent: number }> = ({\n  children,\n  indent,\n  ...props\n}) => (\n  <Link\n    {...props}\n    css={css`\n      border-left: ${borderSize} solid transparent;\n      display: block;\n      color: #eee;\n      text-decoration: none;\n\n      &:hover {\n        background-color: ${navHoverBackgroundColor};\n        border-left: ${borderSize} solid ${navBorderAccent};\n      }\n    `}\n    getProps={({ isCurrent }) => {\n      // the object returned here is passed to the\n      // anchor element's props\n      return {\n        style: {\n          backgroundColor: isCurrent ? navSelectedBackgroundColor : null,\n          borderLeft: isCurrent ? `3px solid ${navBorderAccent}` : null\n        }\n      };\n    }}\n  >\n    <Row indent={indent}>{children}</Row>\n  </Link>\n);\n\nexport default () => (\n  <nav\n    css={css`\n      background-color: #060606;\n      height: 100%;\n      font-size: 1.5rem;\n      width: 250px;\n    `}\n  >\n    <header\n      css={css`\n        margin-bottom: 1rem;\n        padding: 1rem;\n      `}\n    >\n      EXPLORER\n    </header>\n    <div>\n      <Row indent={1}>\n        <FaCaretDown /> Files\n      </Row>\n      <Row indent={1.25}>\n        <FaFolderOpen\n          css={css`\n            vertical-align: top;\n          `}\n        />{' '}\n        src\n      </Row>\n      <NavLink indent={3} to=\"/\">\n        <FaRegFileCode /> Home.js\n      </NavLink>\n      <NavLink indent={3} to=\"/code\">\n        <FaRegFileCode /> Code.js\n      </NavLink>\n      <NavLink indent={3} to=\"/blog\">\n        <FaRegFileCode /> Blog.js\n      </NavLink>\n      <NavLink indent={3} to=\"/resume\">\n        <FaRegFileCode /> Resume.js\n      </NavLink>\n    </div>\n  </nav>\n);\n","import React, { useEffect, useState, useCallback } from 'react';\nimport ReactSidebar from 'react-sidebar';\nimport NavigationListener from './NavigationListener';\nimport Nav from './Nav';\n\nconst mql = window.matchMedia(`(min-width: 800px)`);\n\nexport const SidebarContext = React.createContext<{\n  isDocked: boolean;\n  toggleOpen: () => void;\n}>({ isDocked: false, toggleOpen: () => {} });\n\nconst Sidebar: React.FunctionComponent = ({ children }) => {\n  const [sidebarOpen, setSidebarOpen] = useState(false);\n  const [sidebarDocked, setSidebarDocked] = useState(mql.matches);\n\n  useEffect(() => {\n    function handleMediaQueryChange() {\n      setSidebarOpen(false);\n      setSidebarDocked(mql.matches);\n    }\n\n    mql.addListener(handleMediaQueryChange);\n    return () => mql.removeListener(handleMediaQueryChange);\n  }, []);\n\n  const onNavChange = useCallback(() => setSidebarOpen(false), [\n    setSidebarOpen\n  ]);\n\n  return (\n    <SidebarContext.Provider\n      value={{\n        isDocked: sidebarDocked,\n        toggleOpen: () => setSidebarOpen(!sidebarOpen)\n      }}\n    >\n      <ReactSidebar\n        sidebar={<Nav />}\n        open={sidebarOpen}\n        docked={sidebarDocked}\n        onSetOpen={setSidebarOpen}\n        defaultSidebarWidth={250}\n      >\n        <NavigationListener onChange={onNavChange} />\n        {children}\n      </ReactSidebar>\n    </SidebarContext.Provider>\n  );\n};\n\nexport default Sidebar;\n","/** @jsx jsx */\nimport { css, jsx } from '@emotion/core';\nimport { SidebarContext } from './Sidebar';\nimport { FaBars } from 'react-icons/fa';\n\nexport default () => (\n  <SidebarContext.Consumer>\n    {({ isDocked, toggleOpen }) =>\n      isDocked ? null : (\n        <header\n          css={css`\n            background-color: #060606;\n          `}\n        >\n          <button\n            css={css`\n              background-color: #060606;\n              border: none;\n              color: #eee;\n              cursor: pointer;\n              font-size: 2rem;\n              padding: 1rem;\n            `}\n            onClick={() => toggleOpen()}\n          >\n            <FaBars />\n          </button>\n        </header>\n      )\n    }\n  </SidebarContext.Consumer>\n);\n","import React from 'react';\nimport { Router } from '@reach/router';\nimport Sidebar from './Sidebar';\nimport Header from './Header';\n\nconst Layout: React.FunctionComponent = ({ children }) => {\n  return (\n    <Sidebar>\n      <Header />\n      <main>\n        <Router>{children}</Router>\n      </main>\n    </Sidebar>\n  );\n};\n\nexport default Layout;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","/** @jsx jsx */\nimport { css, jsx } from '@emotion/core';\nimport Home from './pages/home';\nimport Code from './pages/code';\nimport Blog from './pages/blog';\nimport Resume from './pages/resume';\nimport Layout from './Layout';\n\nexport default function App() {\n  return (\n    <div\n      css={css`\n        background-color: #111;\n        color: #eee;\n        font-size: 16px;\n        font-family: 'Roboto', sans-serif;\n        min-height: 100vh;\n        overflow: hidden;\n        width: 100vw;\n      `}\n    >\n      <Layout>\n        <Home path=\"/\" />\n        <Code path=\"/code\" />\n        <Blog path=\"/blog\" />\n        <Resume path=\"/resume\" />\n      </Layout>\n    </div>\n  );\n}\n"],"sourceRoot":""}